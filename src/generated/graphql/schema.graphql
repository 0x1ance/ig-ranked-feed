# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

"""An object with a global ID."""
interface Node {
  """The global ID of the object."""
  id: ID!
}

"""Information about pagination in a connection."""
type PageInfo {
  """When paginating forwards, the cursor to continue."""
  endCursor: String

  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean

  """When paginating backwards, the cursor to continue."""
  startCursor: String
}

type Post implements Node {
  commentCount: Int!
  createdAt: DateTime!

  """The global ID of the object."""
  id: ID!
  isVideo: Boolean!
  likeCount: Int!
  owner: String!
  shortcode: String!
  thumbnailUrl: String!
  type: String!
  url: String!
  videoViewCount: Int
}

type PostConnection {
  """A list of edges."""
  edges: [PostEdge]

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """Identifies the total count of items in the connection."""
  totalCount: Float!
}

type PostEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: Post!
}

"""The filter for post"""
enum PostFilter {
  POPULARITY
  RECENCY
}

type Query {
  """Fetches an object given its global ID."""
  node(
    """The global ID of the object."""
    id: ID!
  ): Node

  """Fetches objects given their global IDs."""
  nodes(
    """The global IDs of the objects."""
    ids: [ID!]!
  ): [Node]!
  posts(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String
    filter: PostFilter!

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
  ): PostConnection!
}
